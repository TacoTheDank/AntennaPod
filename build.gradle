import com.github.spotbugs.snom.SpotBugsTask

buildscript {
    ext.agpVersion = "8.0.2"
}
plugins {
    id 'com.android.application' version "$agpVersion" apply false
    id 'com.android.library' version "$agpVersion" apply false
    id 'com.github.spotbugs' version '5.0.14' apply false
    id 'checkstyle'
}

project.ext {
    // AndroidX
    annotationVersion = "1.2.0"
    appcompatVersion = "1.3.1"
    coreVersion = "1.5.0"
    fragmentVersion = "1.3.6"
    mediaVersion = "1.4.3"
    paletteVersion = "1.0.0"
    preferenceVersion = "1.1.1"
    recyclerViewVersion = "1.2.1"
    viewPager2Version = "1.1.0-beta01"
    workManagerVersion = "2.7.1"
    googleMaterialVersion = "1.7.0"

    // Third-party
    commonslangVersion = "3.6"
    commonsioVersion = "2.5"
    jsoupVersion = "1.15.1"
    glideVersion = "4.13.2"
    okhttpVersion = "3.12.10"
    okioVersion = "1.17.5"
    eventbusVersion = "3.3.1"
    rxAndroidVersion = "2.1.1"
    rxJavaVersion = "2.2.2"
    iconifyVersion = "2.2.2"
    annimonStreamVersion = "1.2.2"
    exoPlayerVersion = "2.14.2"

    // Google Play build
    wearableSupportVersion = "2.6.0"

    //Tests
    awaitilityVersion = "3.1.6"
    junitVersion = "4.13"
    robolectricVersion = "4.9"
    espressoVersion = "3.5.0"
    runnerVersion = "1.5.0"
    rulesVersion = "1.5.0"
    testCoreVersion = "1.5.0"
}

checkstyle {
    toolVersion '10.3.1'
}

tasks.register('checkstyle', Checkstyle) {
    minHeapSize = "200m"
    maxHeapSize = "2g"
    classpath = files()
    source "${project.rootDir}"
    exclude("**/generated-sources/**")
    exclude("**/gen/**")
    exclude("**/build/**")
    exclude("**/generated/**")
}

subprojects {
    apply plugin: 'com.github.spotbugs'

    spotbugs {
        toolVersion = '4.5.3'
        effort = 'max'
        reportLevel = 'medium'
        excludeFilter = rootProject.file('config/spotbugs/exclude.xml')
        ignoreFailures = true // Handled by printing task
        reportsDir = layout.buildDirectory.file("reports/spotbugs/").get().asFile
    }

    tasks.withType(SpotBugsTask).configureEach {
        reports {
            xml {
                required = true
                if (getGradle().getStartParameter().getTaskRequests().toString().contains("spotbugsPlay")) {
                    outputLocation = layout.buildDirectory.file("reports/spotbugs/playDebug.xml").get().asFile
                } else {
                    outputLocation = layout.buildDirectory.file("reports/spotbugs/debug.xml").get().asFile
                }
            }
        }
    }
}
